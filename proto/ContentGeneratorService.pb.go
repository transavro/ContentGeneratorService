// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ContentGeneratorService.proto

package ContentGeneratorService

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Monetize int32

const (
	Monetize_Free         Monetize = 0
	Monetize_Paid         Monetize = 1
	Monetize_Subscription Monetize = 2
	Monetize_Rent         Monetize = 3
)

var Monetize_name = map[int32]string{
	0: "Free",
	1: "Paid",
	2: "Subscription",
	3: "Rent",
}

var Monetize_value = map[string]int32{
	"Free":         0,
	"Paid":         1,
	"Subscription": 2,
	"Rent":         3,
}

func (x Monetize) String() string {
	return proto.EnumName(Monetize_name, int32(x))
}

func (Monetize) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5a8256c98835032f, []int{0}
}

type Request struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a8256c98835032f, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

type ContentAvaliable struct {
	Monetize             Monetize `protobuf:"varint,6,opt,name=monetize,proto3,enum=ContentGeneratorService.Monetize" json:"monetize,omitempty"`
	TargetId             string   `protobuf:"bytes,1,opt,name=targetId,proto3" json:"targetId,omitempty"`
	Source               string   `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Package              string   `protobuf:"bytes,3,opt,name=package,proto3" json:"package,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Target               string   `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ContentAvaliable) Reset()         { *m = ContentAvaliable{} }
func (m *ContentAvaliable) String() string { return proto.CompactTextString(m) }
func (*ContentAvaliable) ProtoMessage()    {}
func (*ContentAvaliable) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a8256c98835032f, []int{1}
}

func (m *ContentAvaliable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContentAvaliable.Unmarshal(m, b)
}
func (m *ContentAvaliable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContentAvaliable.Marshal(b, m, deterministic)
}
func (m *ContentAvaliable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentAvaliable.Merge(m, src)
}
func (m *ContentAvaliable) XXX_Size() int {
	return xxx_messageInfo_ContentAvaliable.Size(m)
}
func (m *ContentAvaliable) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentAvaliable.DiscardUnknown(m)
}

var xxx_messageInfo_ContentAvaliable proto.InternalMessageInfo

func (m *ContentAvaliable) GetMonetize() Monetize {
	if m != nil {
		return m.Monetize
	}
	return Monetize_Free
}

func (m *ContentAvaliable) GetTargetId() string {
	if m != nil {
		return m.TargetId
	}
	return ""
}

func (m *ContentAvaliable) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *ContentAvaliable) GetPackage() string {
	if m != nil {
		return m.Package
	}
	return ""
}

func (m *ContentAvaliable) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ContentAvaliable) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type Play struct {
	ContentAvailable     []*ContentAvaliable `protobuf:"bytes,3,rep,name=contentAvailable,proto3" json:"contentAvailable,omitempty"`
	RefId                string              `protobuf:"bytes,1,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-" bson:"-"`
	XXX_unrecognized     []byte              `json:"-" bson:"-"`
	XXX_sizecache        int32               `json:"-" bson:"-"`
}

func (m *Play) Reset()         { *m = Play{} }
func (m *Play) String() string { return proto.CompactTextString(m) }
func (*Play) ProtoMessage()    {}
func (*Play) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a8256c98835032f, []int{2}
}

func (m *Play) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Play.Unmarshal(m, b)
}
func (m *Play) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Play.Marshal(b, m, deterministic)
}
func (m *Play) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Play.Merge(m, src)
}
func (m *Play) XXX_Size() int {
	return xxx_messageInfo_Play.Size(m)
}
func (m *Play) XXX_DiscardUnknown() {
	xxx_messageInfo_Play.DiscardUnknown(m)
}

var xxx_messageInfo_Play proto.InternalMessageInfo

func (m *Play) GetContentAvailable() []*ContentAvaliable {
	if m != nil {
		return m.ContentAvailable
	}
	return nil
}

func (m *Play) GetRefId() string {
	if m != nil {
		return m.RefId
	}
	return ""
}

type Media struct {
	Landscape            []string `protobuf:"bytes,5,rep,name=landscape,proto3" json:"landscape,omitempty"`
	Portrait             []string `protobuf:"bytes,1,rep,name=portrait,proto3" json:"portrait,omitempty"`
	Backdrop             []string `protobuf:"bytes,2,rep,name=backdrop,proto3" json:"backdrop,omitempty"`
	Banner               []string `protobuf:"bytes,3,rep,name=banner,proto3" json:"banner,omitempty"`
	Video                []string `protobuf:"bytes,4,rep,name=video,proto3" json:"video,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *Media) Reset()         { *m = Media{} }
func (m *Media) String() string { return proto.CompactTextString(m) }
func (*Media) ProtoMessage()    {}
func (*Media) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a8256c98835032f, []int{3}
}

func (m *Media) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Media.Unmarshal(m, b)
}
func (m *Media) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Media.Marshal(b, m, deterministic)
}
func (m *Media) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Media.Merge(m, src)
}
func (m *Media) XXX_Size() int {
	return xxx_messageInfo_Media.Size(m)
}
func (m *Media) XXX_DiscardUnknown() {
	xxx_messageInfo_Media.DiscardUnknown(m)
}

var xxx_messageInfo_Media proto.InternalMessageInfo

func (m *Media) GetLandscape() []string {
	if m != nil {
		return m.Landscape
	}
	return nil
}

func (m *Media) GetPortrait() []string {
	if m != nil {
		return m.Portrait
	}
	return nil
}

func (m *Media) GetBackdrop() []string {
	if m != nil {
		return m.Backdrop
	}
	return nil
}

func (m *Media) GetBanner() []string {
	if m != nil {
		return m.Banner
	}
	return nil
}

func (m *Media) GetVideo() []string {
	if m != nil {
		return m.Video
	}
	return nil
}

type Content struct {
	PublishState         bool     `protobuf:"varint,3,opt,name=publishState,proto3" json:"publishState,omitempty"`
	DetailPage           bool     `protobuf:"varint,1,opt,name=detailPage,proto3" json:"detailPage,omitempty"`
	Sources              []string `protobuf:"bytes,2,rep,name=sources,proto3" json:"sources,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *Content) Reset()         { *m = Content{} }
func (m *Content) String() string { return proto.CompactTextString(m) }
func (*Content) ProtoMessage()    {}
func (*Content) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a8256c98835032f, []int{4}
}

func (m *Content) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Content.Unmarshal(m, b)
}
func (m *Content) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Content.Marshal(b, m, deterministic)
}
func (m *Content) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Content.Merge(m, src)
}
func (m *Content) XXX_Size() int {
	return xxx_messageInfo_Content.Size(m)
}
func (m *Content) XXX_DiscardUnknown() {
	xxx_messageInfo_Content.DiscardUnknown(m)
}

var xxx_messageInfo_Content proto.InternalMessageInfo

func (m *Content) GetPublishState() bool {
	if m != nil {
		return m.PublishState
	}
	return false
}

func (m *Content) GetDetailPage() bool {
	if m != nil {
		return m.DetailPage
	}
	return false
}

func (m *Content) GetSources() []string {
	if m != nil {
		return m.Sources
	}
	return nil
}

type Metadata struct {
	Title                string   `protobuf:"bytes,20,opt,name=title,proto3" json:"title,omitempty"`
	ImdbId               string   `protobuf:"bytes,1,opt,name=imdbId,proto3" json:"imdbId,omitempty"`
	Synopsis             string   `protobuf:"bytes,2,opt,name=synopsis,proto3" json:"synopsis,omitempty"`
	Country              string   `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	Runtime              string   `protobuf:"bytes,4,opt,name=runtime,proto3" json:"runtime,omitempty"`
	Rating               float64  `protobuf:"fixed64,5,opt,name=rating,proto3" json:"rating,omitempty"`
	ReleaseDate          string   `protobuf:"bytes,6,opt,name=releaseDate,proto3" json:"releaseDate,omitempty"`
	Tags                 []string `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	Year                 int32    `protobuf:"varint,8,opt,name=year,proto3" json:"year,omitempty"`
	Cast                 []string `protobuf:"bytes,9,rep,name=cast,proto3" json:"cast,omitempty"`
	Directors            []string `protobuf:"bytes,10,rep,name=directors,proto3" json:"directors,omitempty"`
	Genre                []string `protobuf:"bytes,11,rep,name=genre,proto3" json:"genre,omitempty"`
	Categories           []string `protobuf:"bytes,12,rep,name=categories,proto3" json:"categories,omitempty"`
	Languages            []string `protobuf:"bytes,13,rep,name=languages,proto3" json:"languages,omitempty"`
	KidsSafe             bool     `protobuf:"varint,14,opt,name=kidsSafe,proto3" json:"kidsSafe,omitempty"`
	ViewCount            float64  `protobuf:"fixed64,15,opt,name=viewCount,proto3" json:"viewCount,omitempty"`
	Season               int32    `protobuf:"varint,16,opt,name=season,proto3" json:"season,omitempty"`
	Episode              int32    `protobuf:"varint,17,opt,name=episode,proto3" json:"episode,omitempty"`
	Part                 int32    `protobuf:"varint,18,opt,name=part,proto3" json:"part,omitempty"`
	Mood                 []int32  `protobuf:"varint,19,rep,packed,name=mood,proto3" json:"mood,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a8256c98835032f, []int{5}
}

func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (m *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(m, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Metadata) GetImdbId() string {
	if m != nil {
		return m.ImdbId
	}
	return ""
}

func (m *Metadata) GetSynopsis() string {
	if m != nil {
		return m.Synopsis
	}
	return ""
}

func (m *Metadata) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Metadata) GetRuntime() string {
	if m != nil {
		return m.Runtime
	}
	return ""
}

func (m *Metadata) GetRating() float64 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func (m *Metadata) GetReleaseDate() string {
	if m != nil {
		return m.ReleaseDate
	}
	return ""
}

func (m *Metadata) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Metadata) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *Metadata) GetCast() []string {
	if m != nil {
		return m.Cast
	}
	return nil
}

func (m *Metadata) GetDirectors() []string {
	if m != nil {
		return m.Directors
	}
	return nil
}

func (m *Metadata) GetGenre() []string {
	if m != nil {
		return m.Genre
	}
	return nil
}

func (m *Metadata) GetCategories() []string {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *Metadata) GetLanguages() []string {
	if m != nil {
		return m.Languages
	}
	return nil
}

func (m *Metadata) GetKidsSafe() bool {
	if m != nil {
		return m.KidsSafe
	}
	return false
}

func (m *Metadata) GetViewCount() float64 {
	if m != nil {
		return m.ViewCount
	}
	return 0
}

func (m *Metadata) GetSeason() int32 {
	if m != nil {
		return m.Season
	}
	return 0
}

func (m *Metadata) GetEpisode() int32 {
	if m != nil {
		return m.Episode
	}
	return 0
}

func (m *Metadata) GetPart() int32 {
	if m != nil {
		return m.Part
	}
	return 0
}

func (m *Metadata) GetMood() []int32 {
	if m != nil {
		return m.Mood
	}
	return nil
}

type Optimus struct {
	Media                *Media               `protobuf:"bytes,6,opt,name=media,proto3" json:"media,omitempty"`
	RefId                string               `protobuf:"bytes,1,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	TileType             int32                `protobuf:"varint,2,opt,name=tileType,proto3" json:"tileType,omitempty"`
	Content              *Content             `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Metadata             *Metadata            `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *Optimus) Reset()         { *m = Optimus{} }
func (m *Optimus) String() string { return proto.CompactTextString(m) }
func (*Optimus) ProtoMessage()    {}
func (*Optimus) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a8256c98835032f, []int{6}
}

func (m *Optimus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Optimus.Unmarshal(m, b)
}
func (m *Optimus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Optimus.Marshal(b, m, deterministic)
}
func (m *Optimus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Optimus.Merge(m, src)
}
func (m *Optimus) XXX_Size() int {
	return xxx_messageInfo_Optimus.Size(m)
}
func (m *Optimus) XXX_DiscardUnknown() {
	xxx_messageInfo_Optimus.DiscardUnknown(m)
}

var xxx_messageInfo_Optimus proto.InternalMessageInfo

func (m *Optimus) GetMedia() *Media {
	if m != nil {
		return m.Media
	}
	return nil
}

func (m *Optimus) GetRefId() string {
	if m != nil {
		return m.RefId
	}
	return ""
}

func (m *Optimus) GetTileType() int32 {
	if m != nil {
		return m.TileType
	}
	return 0
}

func (m *Optimus) GetContent() *Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Optimus) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Optimus) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Optimus) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func init() {
	proto.RegisterEnum("ContentGeneratorService.Monetize", Monetize_name, Monetize_value)
	proto.RegisterType((*Request)(nil), "ContentGeneratorService.Request")
	proto.RegisterType((*ContentAvaliable)(nil), "ContentGeneratorService.ContentAvaliable")
	proto.RegisterType((*Play)(nil), "ContentGeneratorService.Play")
	proto.RegisterType((*Media)(nil), "ContentGeneratorService.Media")
	proto.RegisterType((*Content)(nil), "ContentGeneratorService.Content")
	proto.RegisterType((*Metadata)(nil), "ContentGeneratorService.Metadata")
	proto.RegisterType((*Optimus)(nil), "ContentGeneratorService.Optimus")
}

func init() { proto.RegisterFile("ContentGeneratorService.proto", fileDescriptor_5a8256c98835032f) }

var fileDescriptor_5a8256c98835032f = []byte{
	// 973 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0x4f, 0x6f, 0xdc, 0x44,
	0x14, 0xc7, 0xfb, 0x27, 0xbb, 0x3b, 0xdb, 0x24, 0xcb, 0x34, 0xa5, 0xc3, 0xd2, 0x96, 0xc5, 0xa7,
	0xd0, 0x43, 0x16, 0x05, 0x0e, 0x28, 0x12, 0x87, 0x50, 0x54, 0x28, 0x52, 0x20, 0x72, 0x8a, 0x38,
	0xa2, 0xb7, 0xf6, 0x8b, 0x33, 0x8d, 0xed, 0x71, 0x66, 0xc6, 0x89, 0xc2, 0x11, 0x71, 0xe3, 0xc8,
	0xc7, 0xe2, 0x88, 0xf8, 0x00, 0x48, 0x7c, 0x10, 0x34, 0x6f, 0xc6, 0x4e, 0x0a, 0x5a, 0x7a, 0x09,
	0xb7, 0xf9, 0xbd, 0x7f, 0x3f, 0xbf, 0xdf, 0xbc, 0x79, 0x66, 0x8f, 0x9f, 0xa9, 0xca, 0x62, 0x65,
	0xbf, 0xc4, 0x0a, 0x35, 0x58, 0xa5, 0x4f, 0x50, 0x5f, 0xca, 0x14, 0xf7, 0x6a, 0xad, 0xac, 0xe2,
	0x0f, 0xd7, 0xb8, 0xe7, 0x8f, 0x72, 0xa5, 0xf2, 0x02, 0x97, 0x50, 0xcb, 0x25, 0x54, 0x95, 0xb2,
	0x60, 0xa5, 0xaa, 0x8c, 0x4f, 0x9b, 0xbf, 0x1f, 0xbc, 0x84, 0x56, 0xcd, 0xe9, 0xd2, 0xca, 0x12,
	0x8d, 0x85, 0xb2, 0xf6, 0x01, 0xf1, 0x84, 0x8d, 0x12, 0xbc, 0x68, 0xd0, 0xd8, 0xf8, 0xb7, 0x88,
	0xcd, 0x02, 0xcb, 0xe1, 0x25, 0x14, 0x12, 0x56, 0x05, 0xf2, 0xcf, 0xd8, 0xb8, 0x54, 0x15, 0x5a,
	0xf9, 0x23, 0x8a, 0x8d, 0x45, 0xb4, 0xbb, 0xb5, 0xff, 0xc1, 0xde, 0xba, 0x2f, 0x3d, 0x0a, 0x81,
	0x49, 0x97, 0xc2, 0xe7, 0x6c, 0x6c, 0x41, 0xe7, 0x68, 0x5f, 0x64, 0x22, 0x5a, 0x44, 0xbb, 0x93,
	0xa4, 0xc3, 0xfc, 0x1d, 0xb6, 0x61, 0x54, 0xa3, 0x53, 0x14, 0x3d, 0xf2, 0x04, 0xc4, 0x05, 0x1b,
	0xd5, 0x90, 0x9e, 0x43, 0x8e, 0xa2, 0x4f, 0x8e, 0x16, 0x72, 0xce, 0x06, 0xf6, 0xba, 0x46, 0x31,
	0x20, 0x33, 0x9d, 0x5d, 0x15, 0x5f, 0x51, 0x0c, 0x7d, 0x15, 0x8f, 0x62, 0xcb, 0x06, 0xc7, 0x05,
	0x5c, 0xf3, 0xef, 0xd8, 0x2c, 0xed, 0x9a, 0x92, 0x85, 0x6b, 0x4a, 0xf4, 0x17, 0xfd, 0xdd, 0xe9,
	0xfe, 0x87, 0x6b, 0x1b, 0xf9, 0xa7, 0x0a, 0xc9, 0xbf, 0x4a, 0xf0, 0x07, 0x6c, 0x43, 0xe3, 0xe9,
	0x0f, 0xb2, 0x6d, 0x6b, 0xa8, 0xf1, 0xf4, 0x45, 0x16, 0xff, 0x12, 0xb1, 0xe1, 0x11, 0x66, 0x12,
	0xf8, 0x23, 0x36, 0x29, 0xa0, 0xca, 0x4c, 0x0a, 0x35, 0x8a, 0xe1, 0xa2, 0xbf, 0x3b, 0x49, 0x6e,
	0x0c, 0x4e, 0x97, 0x5a, 0x69, 0xab, 0x41, 0x5a, 0x11, 0x91, 0xb3, 0xc3, 0xce, 0xb7, 0x82, 0xf4,
	0x3c, 0xd3, 0xaa, 0x16, 0x3d, 0xef, 0x6b, 0xb1, 0xeb, 0x76, 0x05, 0x55, 0x85, 0x9a, 0x7a, 0x98,
	0x24, 0x01, 0xf1, 0x1d, 0x36, 0xbc, 0x94, 0x19, 0x2a, 0x31, 0x20, 0xb3, 0x07, 0x71, 0xce, 0x46,
	0xa1, 0x15, 0x1e, 0xb3, 0x7b, 0x75, 0xb3, 0x2a, 0xa4, 0x39, 0x3b, 0xb1, 0x60, 0xbd, 0xb2, 0xe3,
	0xe4, 0x35, 0x1b, 0x7f, 0xc2, 0x58, 0x86, 0x16, 0x64, 0x71, 0xec, 0xb4, 0x8f, 0x28, 0xe2, 0x96,
	0xc5, 0x5d, 0x8c, 0xbf, 0x22, 0x13, 0xbe, 0xab, 0x85, 0xf1, 0xcf, 0x03, 0x36, 0x3e, 0x42, 0x0b,
	0x19, 0x58, 0x70, 0xdf, 0x62, 0xa5, 0x2d, 0x50, 0xec, 0x78, 0x65, 0x08, 0xb8, 0x2f, 0x97, 0x65,
	0xb6, 0xea, 0xe6, 0x20, 0x20, 0xd7, 0xad, 0xb9, 0xae, 0x54, 0x6d, 0xa4, 0x09, 0x73, 0xd0, 0x61,
	0x47, 0x98, 0xaa, 0xa6, 0xb2, 0xfa, 0xba, 0x9d, 0x84, 0x00, 0x9d, 0x47, 0x37, 0x95, 0x1b, 0xe6,
	0x30, 0x0c, 0x2d, 0x74, 0x3c, 0x1a, 0xac, 0xac, 0x72, 0x9a, 0x87, 0x28, 0x09, 0x88, 0x2f, 0xd8,
	0x54, 0x63, 0x81, 0x60, 0xf0, 0x0b, 0xd7, 0xff, 0x06, 0x65, 0xdd, 0x36, 0xd1, 0x74, 0x41, 0x6e,
	0xc4, 0x88, 0x7a, 0xa3, 0xb3, 0xb3, 0x5d, 0x23, 0x68, 0x31, 0x5e, 0x44, 0xbb, 0xc3, 0x84, 0xce,
	0xce, 0x96, 0x82, 0xb1, 0x62, 0xe2, 0xe3, 0xdc, 0xd9, 0xdd, 0x76, 0x26, 0x35, 0xa6, 0x56, 0x69,
	0x23, 0x98, 0xbf, 0xed, 0xce, 0xe0, 0x14, 0xc9, 0xb1, 0xd2, 0x28, 0xa6, 0xfe, 0x76, 0x08, 0x38,
	0xb9, 0x53, 0xb0, 0x98, 0x2b, 0x2d, 0xd1, 0x88, 0x7b, 0xe4, 0xba, 0x65, 0x09, 0x13, 0x94, 0x37,
	0x90, 0xa3, 0x11, 0x9b, 0xdd, 0x04, 0x79, 0x83, 0xd3, 0xed, 0x5c, 0x66, 0xe6, 0x04, 0x4e, 0x51,
	0x6c, 0xd1, 0x55, 0x75, 0xd8, 0x65, 0x5e, 0x4a, 0xbc, 0x7a, 0xe6, 0xc4, 0x12, 0xdb, 0x24, 0xc3,
	0x8d, 0x81, 0xde, 0x1d, 0x82, 0x51, 0x95, 0x98, 0x51, 0x57, 0x01, 0x39, 0x4d, 0xb1, 0x96, 0x46,
	0x65, 0x28, 0xde, 0x26, 0x47, 0x0b, 0x5d, 0xc7, 0x35, 0x68, 0x2b, 0xb8, 0x57, 0xc1, 0x9d, 0x9d,
	0xad, 0x54, 0x2a, 0x13, 0xf7, 0x17, 0x7d, 0x67, 0x73, 0xe7, 0xf8, 0xcf, 0x1e, 0x1b, 0x7d, 0x5b,
	0x5b, 0x59, 0x36, 0x86, 0x7f, 0xc2, 0x86, 0xa5, 0x7b, 0x08, 0xa4, 0xf4, 0x74, 0xff, 0xc9, 0xfa,
	0xad, 0xe1, 0xa2, 0x12, 0x1f, 0xbc, 0xe6, 0x59, 0xd1, 0x1a, 0x91, 0x05, 0xbe, 0x74, 0x8f, 0xbf,
	0x47, 0x1f, 0xd1, 0x61, 0x7e, 0xe0, 0x86, 0x84, 0x4a, 0xd3, 0x90, 0x4c, 0xf7, 0x17, 0x6f, 0x7a,
	0xd7, 0x49, 0x9b, 0x40, 0xdb, 0x2d, 0x8c, 0x2d, 0xcd, 0xd1, 0xf4, 0xbf, 0xb6, 0x5b, 0x08, 0x4c,
	0xba, 0x14, 0xfe, 0x29, 0x9b, 0xa4, 0x1a, 0xc1, 0x62, 0x76, 0x68, 0xc5, 0x88, 0xf2, 0xe7, 0x7b,
	0x7e, 0xe3, 0xee, 0xb5, 0x1b, 0x77, 0xef, 0x65, 0xbb, 0x71, 0x93, 0x9b, 0x60, 0x97, 0xd9, 0xd4,
	0x59, 0xc8, 0x1c, 0xbf, 0x39, 0xb3, 0x0b, 0x7e, 0x7a, 0xc0, 0xc6, 0xed, 0x9e, 0xe5, 0x63, 0x36,
	0x78, 0xae, 0x11, 0x67, 0x6f, 0xb9, 0xd3, 0x31, 0xc8, 0x6c, 0x16, 0xf1, 0x19, 0xbb, 0x77, 0xd2,
	0xac, 0x4c, 0xaa, 0x65, 0xed, 0x7e, 0x04, 0xb3, 0x9e, 0xf3, 0x25, 0x58, 0xd9, 0x59, 0x7f, 0xff,
	0x8f, 0x21, 0x5b, 0xf7, 0x1f, 0xe1, 0x17, 0x6c, 0xfb, 0x39, 0xda, 0xf4, 0xec, 0x1b, 0xb0, 0xf2,
	0xd2, 0x3d, 0x08, 0xe0, 0xeb, 0x85, 0x0c, 0xbf, 0x8c, 0xf9, 0xfa, 0x88, 0x30, 0x06, 0xb1, 0xf8,
	0xe9, 0xf7, 0xbf, 0x7e, 0xed, 0xf1, 0x78, 0x73, 0x79, 0xea, 0xaa, 0x2f, 0x2b, 0x2a, 0x7f, 0x10,
	0x3d, 0xfd, 0x28, 0xe2, 0x86, 0x6d, 0x11, 0xe5, 0xd7, 0x8d, 0xb1, 0xdf, 0x83, 0x4d, 0xcf, 0xee,
	0x84, 0xf1, 0x3d, 0x62, 0x7c, 0x10, 0xcf, 0x02, 0xe3, 0xab, 0xc6, 0xd8, 0x2b, 0x57, 0xdd, 0x93,
	0x5e, 0xb1, 0x19, 0x91, 0x7e, 0xd5, 0x54, 0x39, 0x94, 0x40, 0xff, 0x88, 0xbb, 0xa0, 0x7d, 0x4c,
	0xb4, 0x0f, 0x63, 0x1e, 0x68, 0xcf, 0x6e, 0xea, 0x7b, 0xe2, 0x0b, 0xb6, 0x49, 0xc4, 0x27, 0x67,
	0x58, 0x82, 0x56, 0xea, 0x4e, 0x58, 0xe7, 0xc4, 0xba, 0x13, 0x6f, 0x07, 0x56, 0x13, 0x8a, 0xbf,
	0x2e, 0xf0, 0x61, 0x61, 0x3f, 0x87, 0x02, 0x5e, 0xc9, 0xff, 0x45, 0x60, 0x68, 0xab, 0xb7, 0x7d,
	0x6e, 0x1d, 0xa1, 0xce, 0x65, 0x95, 0xb7, 0xab, 0xe0, 0x2e, 0x48, 0xdf, 0x25, 0xd2, 0xfb, 0xf1,
	0xd6, 0xb2, 0x44, 0x9d, 0xe3, 0x52, 0x79, 0x3b, 0x51, 0xae, 0x36, 0xe8, 0xc9, 0x7c, 0xfc, 0x77,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x6a, 0xb2, 0x99, 0x62, 0x44, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ContentGeneratorServiceClient is the client API for ContentGeneratorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContentGeneratorServiceClient interface {
	FetchNativeData(ctx context.Context, in *Request, opts ...grpc.CallOption) (ContentGeneratorService_FetchNativeDataClient, error)
	FetchJustWatch(ctx context.Context, in *Request, opts ...grpc.CallOption) (ContentGeneratorService_FetchJustWatchClient, error)
	FetchHungamaPlay(ctx context.Context, in *Request, opts ...grpc.CallOption) (ContentGeneratorService_FetchHungamaPlayClient, error)
	FetchShemaroo(ctx context.Context, in *Request, opts ...grpc.CallOption) (ContentGeneratorService_FetchShemarooClient, error)
	FetchAltBalaji(ctx context.Context, in *Request, opts ...grpc.CallOption) (ContentGeneratorService_FetchAltBalajiClient, error)
	MergingOptimus(ctx context.Context, in *Request, opts ...grpc.CallOption) (ContentGeneratorService_MergingOptimusClient, error)
}

type contentGeneratorServiceClient struct {
	cc *grpc.ClientConn
}

func NewContentGeneratorServiceClient(cc *grpc.ClientConn) ContentGeneratorServiceClient {
	return &contentGeneratorServiceClient{cc}
}

func (c *contentGeneratorServiceClient) FetchNativeData(ctx context.Context, in *Request, opts ...grpc.CallOption) (ContentGeneratorService_FetchNativeDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ContentGeneratorService_serviceDesc.Streams[0], "/ContentGeneratorService.ContentGeneratorService/FetchNativeData", opts...)
	if err != nil {
		return nil, err
	}
	x := &contentGeneratorServiceFetchNativeDataClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ContentGeneratorService_FetchNativeDataClient interface {
	Recv() (*Optimus, error)
	grpc.ClientStream
}

type contentGeneratorServiceFetchNativeDataClient struct {
	grpc.ClientStream
}

func (x *contentGeneratorServiceFetchNativeDataClient) Recv() (*Optimus, error) {
	m := new(Optimus)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *contentGeneratorServiceClient) FetchJustWatch(ctx context.Context, in *Request, opts ...grpc.CallOption) (ContentGeneratorService_FetchJustWatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ContentGeneratorService_serviceDesc.Streams[1], "/ContentGeneratorService.ContentGeneratorService/FetchJustWatch", opts...)
	if err != nil {
		return nil, err
	}
	x := &contentGeneratorServiceFetchJustWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ContentGeneratorService_FetchJustWatchClient interface {
	Recv() (*Optimus, error)
	grpc.ClientStream
}

type contentGeneratorServiceFetchJustWatchClient struct {
	grpc.ClientStream
}

func (x *contentGeneratorServiceFetchJustWatchClient) Recv() (*Optimus, error) {
	m := new(Optimus)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *contentGeneratorServiceClient) FetchHungamaPlay(ctx context.Context, in *Request, opts ...grpc.CallOption) (ContentGeneratorService_FetchHungamaPlayClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ContentGeneratorService_serviceDesc.Streams[2], "/ContentGeneratorService.ContentGeneratorService/FetchHungamaPlay", opts...)
	if err != nil {
		return nil, err
	}
	x := &contentGeneratorServiceFetchHungamaPlayClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ContentGeneratorService_FetchHungamaPlayClient interface {
	Recv() (*Optimus, error)
	grpc.ClientStream
}

type contentGeneratorServiceFetchHungamaPlayClient struct {
	grpc.ClientStream
}

func (x *contentGeneratorServiceFetchHungamaPlayClient) Recv() (*Optimus, error) {
	m := new(Optimus)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *contentGeneratorServiceClient) FetchShemaroo(ctx context.Context, in *Request, opts ...grpc.CallOption) (ContentGeneratorService_FetchShemarooClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ContentGeneratorService_serviceDesc.Streams[3], "/ContentGeneratorService.ContentGeneratorService/FetchShemaroo", opts...)
	if err != nil {
		return nil, err
	}
	x := &contentGeneratorServiceFetchShemarooClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ContentGeneratorService_FetchShemarooClient interface {
	Recv() (*Optimus, error)
	grpc.ClientStream
}

type contentGeneratorServiceFetchShemarooClient struct {
	grpc.ClientStream
}

func (x *contentGeneratorServiceFetchShemarooClient) Recv() (*Optimus, error) {
	m := new(Optimus)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *contentGeneratorServiceClient) FetchAltBalaji(ctx context.Context, in *Request, opts ...grpc.CallOption) (ContentGeneratorService_FetchAltBalajiClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ContentGeneratorService_serviceDesc.Streams[4], "/ContentGeneratorService.ContentGeneratorService/FetchAltBalaji", opts...)
	if err != nil {
		return nil, err
	}
	x := &contentGeneratorServiceFetchAltBalajiClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ContentGeneratorService_FetchAltBalajiClient interface {
	Recv() (*Optimus, error)
	grpc.ClientStream
}

type contentGeneratorServiceFetchAltBalajiClient struct {
	grpc.ClientStream
}

func (x *contentGeneratorServiceFetchAltBalajiClient) Recv() (*Optimus, error) {
	m := new(Optimus)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *contentGeneratorServiceClient) MergingOptimus(ctx context.Context, in *Request, opts ...grpc.CallOption) (ContentGeneratorService_MergingOptimusClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ContentGeneratorService_serviceDesc.Streams[5], "/ContentGeneratorService.ContentGeneratorService/MergingOptimus", opts...)
	if err != nil {
		return nil, err
	}
	x := &contentGeneratorServiceMergingOptimusClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ContentGeneratorService_MergingOptimusClient interface {
	Recv() (*Optimus, error)
	grpc.ClientStream
}

type contentGeneratorServiceMergingOptimusClient struct {
	grpc.ClientStream
}

func (x *contentGeneratorServiceMergingOptimusClient) Recv() (*Optimus, error) {
	m := new(Optimus)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ContentGeneratorServiceServer is the server API for ContentGeneratorService service.
type ContentGeneratorServiceServer interface {
	FetchNativeData(*Request, ContentGeneratorService_FetchNativeDataServer) error
	FetchJustWatch(*Request, ContentGeneratorService_FetchJustWatchServer) error
	FetchHungamaPlay(*Request, ContentGeneratorService_FetchHungamaPlayServer) error
	FetchShemaroo(*Request, ContentGeneratorService_FetchShemarooServer) error
	FetchAltBalaji(*Request, ContentGeneratorService_FetchAltBalajiServer) error
	MergingOptimus(*Request, ContentGeneratorService_MergingOptimusServer) error
}

// UnimplementedContentGeneratorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedContentGeneratorServiceServer struct {
}

func (*UnimplementedContentGeneratorServiceServer) FetchNativeData(req *Request, srv ContentGeneratorService_FetchNativeDataServer) error {
	return status.Errorf(codes.Unimplemented, "method FetchNativeData not implemented")
}
func (*UnimplementedContentGeneratorServiceServer) FetchJustWatch(req *Request, srv ContentGeneratorService_FetchJustWatchServer) error {
	return status.Errorf(codes.Unimplemented, "method FetchJustWatch not implemented")
}
func (*UnimplementedContentGeneratorServiceServer) FetchHungamaPlay(req *Request, srv ContentGeneratorService_FetchHungamaPlayServer) error {
	return status.Errorf(codes.Unimplemented, "method FetchHungamaPlay not implemented")
}
func (*UnimplementedContentGeneratorServiceServer) FetchShemaroo(req *Request, srv ContentGeneratorService_FetchShemarooServer) error {
	return status.Errorf(codes.Unimplemented, "method FetchShemaroo not implemented")
}
func (*UnimplementedContentGeneratorServiceServer) FetchAltBalaji(req *Request, srv ContentGeneratorService_FetchAltBalajiServer) error {
	return status.Errorf(codes.Unimplemented, "method FetchAltBalaji not implemented")
}
func (*UnimplementedContentGeneratorServiceServer) MergingOptimus(req *Request, srv ContentGeneratorService_MergingOptimusServer) error {
	return status.Errorf(codes.Unimplemented, "method MergingOptimus not implemented")
}

func RegisterContentGeneratorServiceServer(s *grpc.Server, srv ContentGeneratorServiceServer) {
	s.RegisterService(&_ContentGeneratorService_serviceDesc, srv)
}

func _ContentGeneratorService_FetchNativeData_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ContentGeneratorServiceServer).FetchNativeData(m, &contentGeneratorServiceFetchNativeDataServer{stream})
}

type ContentGeneratorService_FetchNativeDataServer interface {
	Send(*Optimus) error
	grpc.ServerStream
}

type contentGeneratorServiceFetchNativeDataServer struct {
	grpc.ServerStream
}

func (x *contentGeneratorServiceFetchNativeDataServer) Send(m *Optimus) error {
	return x.ServerStream.SendMsg(m)
}

func _ContentGeneratorService_FetchJustWatch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ContentGeneratorServiceServer).FetchJustWatch(m, &contentGeneratorServiceFetchJustWatchServer{stream})
}

type ContentGeneratorService_FetchJustWatchServer interface {
	Send(*Optimus) error
	grpc.ServerStream
}

type contentGeneratorServiceFetchJustWatchServer struct {
	grpc.ServerStream
}

func (x *contentGeneratorServiceFetchJustWatchServer) Send(m *Optimus) error {
	return x.ServerStream.SendMsg(m)
}

func _ContentGeneratorService_FetchHungamaPlay_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ContentGeneratorServiceServer).FetchHungamaPlay(m, &contentGeneratorServiceFetchHungamaPlayServer{stream})
}

type ContentGeneratorService_FetchHungamaPlayServer interface {
	Send(*Optimus) error
	grpc.ServerStream
}

type contentGeneratorServiceFetchHungamaPlayServer struct {
	grpc.ServerStream
}

func (x *contentGeneratorServiceFetchHungamaPlayServer) Send(m *Optimus) error {
	return x.ServerStream.SendMsg(m)
}

func _ContentGeneratorService_FetchShemaroo_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ContentGeneratorServiceServer).FetchShemaroo(m, &contentGeneratorServiceFetchShemarooServer{stream})
}

type ContentGeneratorService_FetchShemarooServer interface {
	Send(*Optimus) error
	grpc.ServerStream
}

type contentGeneratorServiceFetchShemarooServer struct {
	grpc.ServerStream
}

func (x *contentGeneratorServiceFetchShemarooServer) Send(m *Optimus) error {
	return x.ServerStream.SendMsg(m)
}

func _ContentGeneratorService_FetchAltBalaji_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ContentGeneratorServiceServer).FetchAltBalaji(m, &contentGeneratorServiceFetchAltBalajiServer{stream})
}

type ContentGeneratorService_FetchAltBalajiServer interface {
	Send(*Optimus) error
	grpc.ServerStream
}

type contentGeneratorServiceFetchAltBalajiServer struct {
	grpc.ServerStream
}

func (x *contentGeneratorServiceFetchAltBalajiServer) Send(m *Optimus) error {
	return x.ServerStream.SendMsg(m)
}

func _ContentGeneratorService_MergingOptimus_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ContentGeneratorServiceServer).MergingOptimus(m, &contentGeneratorServiceMergingOptimusServer{stream})
}

type ContentGeneratorService_MergingOptimusServer interface {
	Send(*Optimus) error
	grpc.ServerStream
}

type contentGeneratorServiceMergingOptimusServer struct {
	grpc.ServerStream
}

func (x *contentGeneratorServiceMergingOptimusServer) Send(m *Optimus) error {
	return x.ServerStream.SendMsg(m)
}

var _ContentGeneratorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ContentGeneratorService.ContentGeneratorService",
	HandlerType: (*ContentGeneratorServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "FetchNativeData",
			Handler:       _ContentGeneratorService_FetchNativeData_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "FetchJustWatch",
			Handler:       _ContentGeneratorService_FetchJustWatch_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "FetchHungamaPlay",
			Handler:       _ContentGeneratorService_FetchHungamaPlay_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "FetchShemaroo",
			Handler:       _ContentGeneratorService_FetchShemaroo_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "FetchAltBalaji",
			Handler:       _ContentGeneratorService_FetchAltBalaji_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "MergingOptimus",
			Handler:       _ContentGeneratorService_MergingOptimus_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "ContentGeneratorService.proto",
}
